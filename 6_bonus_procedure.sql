-- ==============================================================
-- –•–†–ê–ù–ò–ú–ê–Ø –ü–†–û–¶–ï–î–£–†–ê –î–õ–Ø –†–ê–°–ß–ï–¢–ê –ü–†–ï–ú–ò–ô
-- –§–æ—Ä–º—É–ª–∞: X = (P1*X1 + P2*X2)*X0
-- P1 = —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã (RentPrice * Time)
-- X1 = 30% –æ—Ç –∞—Ä–µ–Ω–¥—ã
-- P2 = —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ–º–æ–Ω—Ç–∞ (Price –∏–∑ ServiceBook)
-- X2 = 80% –æ—Ç —Ä–µ–º–æ–Ω—Ç–∞
-- X0 = –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç —Å—Ç–∞–∂–∞ (5%, 10%, 15%)
-- ==============================================================

CREATE OR ALTER PROCEDURE [usp_LoadEmployeeBonusMart]
    @TargetYear INT = NULL,
    @TargetMonth INT = NULL
AS
BEGIN
    SET NOCOUNT ON;

    -- –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
    IF @TargetYear IS NULL SET @TargetYear = YEAR(GETDATE());
    IF @TargetMonth IS NULL SET @TargetMonth = MONTH(GETDATE());

    BEGIN TRY
        BEGIN TRANSACTION;

        -- –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥
        DELETE FROM [EmployeeBonusMart]
        WHERE [Year] = @TargetYear AND [Month] = @TargetMonth;

        -- –†–∞—Å—á–µ—Ç –ø—Ä–µ–º–∏–π –ø–æ —Ñ–æ—Ä–º—É–ª–µ: (P1*X1 + P2*X2) * X0
        ;WITH StaffExperience AS (
            SELECT 
                s.Id AS StaffId,
                s.Name AS StaffName,
                DATEDIFF(YEAR, s.[Date], GETDATE()) AS ExperienceYears,
                CASE 
                    WHEN DATEDIFF(YEAR, s.[Date], GETDATE()) < 1 THEN 0.05      -- –î–æ 1 –≥–æ–¥–∞: 5%
                    WHEN DATEDIFF(YEAR, s.[Date], GETDATE()) <= 2 THEN 0.10     -- 1-2 –≥–æ–¥–∞: 10%
                    ELSE 0.15                                                   -- –ë–æ–ª–µ–µ 2 –ª–µ—Ç: 15%
                END AS ExperienceCoefficient
            FROM [Staff] s
        ),
        RentalData AS (
            -- P1: –°—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã (RentPrice * Time)
            SELECT 
                r.StaffId,
                SUM(b.RentPrice * r.Time) AS TotalRentalRevenue
            FROM [RentBook] r
            JOIN [Bicycle] b ON r.BicycleId = b.Id
            WHERE YEAR(r.[Date]) = @TargetYear 
              AND MONTH(r.[Date]) = @TargetMonth
              AND r.Paid = 1
            GROUP BY r.StaffId
        ),
        ServiceData AS (
            -- P2: –°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ–º–æ–Ω—Ç–∞
            SELECT 
                sb.StaffId,
                SUM(sb.Price) AS TotalServiceRevenue
            FROM [ServiceBook] sb
            WHERE YEAR(sb.[Date]) = @TargetYear 
              AND MONTH(sb.[Date]) = @TargetMonth
            GROUP BY sb.StaffId
        ),
        BonusCalculation AS (
            SELECT
                se.StaffId,
                se.StaffName,
                se.ExperienceYears,
                se.ExperienceCoefficient * 100 AS ExperienceBonusPercent,
                ISNULL(rd.TotalRentalRevenue, 0) AS RentalRevenue,
                ISNULL(sd.TotalServiceRevenue, 0) AS ServiceRevenue,
                -- –†–∞—Å—á–µ—Ç –ø–æ —Ñ–æ—Ä–º—É–ª–µ: (P1*X1 + P2*X2) * X0
                (ISNULL(rd.TotalRentalRevenue, 0) * 0.3) AS RentalBonus,          -- P1 * X1
                (ISNULL(sd.TotalServiceRevenue, 0) * 0.8) AS ServiceBonus,        -- P2 * X2
                ((ISNULL(rd.TotalRentalRevenue, 0) * 0.3) + (ISNULL(sd.TotalServiceRevenue, 0) * 0.8)) * se.ExperienceCoefficient AS TotalBonus
            FROM StaffExperience se
            LEFT JOIN RentalData rd ON se.StaffId = rd.StaffId
            LEFT JOIN ServiceData sd ON se.StaffId = sd.StaffId
            WHERE ISNULL(rd.TotalRentalRevenue, 0) > 0 OR ISNULL(sd.TotalServiceRevenue, 0) > 0
        )
        INSERT INTO [EmployeeBonusMart] (
            [Year], [Month], [StaffId], [StaffName],
            [ExperienceYears], [ExperienceBonusPercent],
            [RentalRevenue], [ServiceRevenue],
            [RentalBonus], [ServiceBonus], [TotalBonus]
        )
        SELECT
            @TargetYear,
            @TargetMonth,
            StaffId,
            StaffName,
            ExperienceYears,
            ExperienceBonusPercent,
            RentalRevenue,
            ServiceRevenue,
            RentalBonus,
            ServiceBonus,
            TotalBonus
        FROM BonusCalculation;

        COMMIT TRANSACTION;

        -- –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        SELECT 
            @TargetYear AS [Year],
            @TargetMonth AS [Month],
            COUNT(*) AS [RecordsLoaded],
            FORMAT(SUM([TotalBonus]), 'N2') AS [TotalBonusAmount],
            FORMAT(AVG([TotalBonus]), 'N2') AS [AverageBonus]
        FROM [EmployeeBonusMart]
        WHERE [Year] = @TargetYear AND [Month] = @TargetMonth;

        PRINT '‚úÖ –í–∏—Ç—Ä–∏–Ω–∞ EmployeeBonusMart —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∑–∞ ' 
              + CAST(@TargetYear AS VARCHAR(4)) + '-' + CAST(@TargetMonth AS VARCHAR(2));

    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION;

        DECLARE 
            @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE(),
            @ErrorSeverity INT = ERROR_SEVERITY(),
            @ErrorState INT = ERROR_STATE();

        PRINT '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏—Ç—Ä–∏–Ω—ã: ' + @ErrorMessage;
        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
    END CATCH;
END;
GO

-- ============================================================================
-- –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–Ø –ó–ê–ì–†–£–ó–ö–ò –í–ò–¢–†–ò–ù–´
-- ============================================================================
/*
–ü—Ä–æ—Ü–µ—Å—Å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏—Ç—Ä–∏–Ω—ã –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏:

1Ô∏è‚É£ SQL SERVER AGENT (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –º–µ—Ç–æ–¥)
   - –°–æ–∑–¥–∞—Ç—å Job, –∫–æ—Ç–æ—Ä—ã–π –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ü–µ–¥—É—Ä—É:
       EXEC dbo.usp_LoadEmployeeBonusMart;
   - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 02:00)
   - –î–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö

2Ô∏è‚É£ WINDOWS TASK SCHEDULER
   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É sqlcmd –≤ .bat —Ñ–∞–π–ª–µ
   - –ó–∞–ø—É—Å–∫–∞—Ç—å –∑–∞–¥–∞—á—É –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
   - –ü—Ä–∏–º–µ—Ä:
       sqlcmd -S . -d BicycleRental -Q "EXEC dbo.usp_LoadEmployeeBonusMart"

3Ô∏è‚É£ SSIS / AZURE DATA FACTORY
   - –î–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π: —Å–æ–∑–¥–∞–Ω–∏–µ ETL-–ø–∞–π–ø–ª–∞–π–Ω–∞
   - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, –∞–ª–µ—Ä—Ç—ã, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –¥—Ä—É–≥–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏

4Ô∏è‚É£ POWERSHELL SCRIPT
   - –°–∫—Ä–∏–ø—Ç —Å –≤—ã–∑–æ–≤–æ–º Invoke-Sqlcmd
   - –ì–∏–±–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ email
*/

PRINT '‚úÖ –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–µ–º–∏–π —Å–æ–∑–¥–∞–Ω–∞';
PRINT 'üìä –§–æ—Ä–º—É–ª–∞: (–ê—Ä–µ–Ω–¥–∞ √ó 30% + –†–µ–º–æ–Ω—Ç √ó 80%) √ó –°—Ç–∞–∂%';